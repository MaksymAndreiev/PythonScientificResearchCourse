import numpy as np
import matplotlib.pyplot as plt

N = 100  # розмір матриці
x = np.linspace(-1, 1, N + 1)
y = np.linspace(-1, 1, N + 1)
[X, Y] = np.meshgrid(x, y)
x0 = -0.5
y0 = -0.25  # координата першої вершини трикутника
x1 = -0.5
y1 = 0.25  # координата другої вершини трикутника
x2 = 0.6
y2 = -0.25  # координата третьої вершини трикутника
x3 = 0.6
y3 = 0.25
x4 = 0.4
y4 = 0
Q1 = X > x0
Q2 = X < x2
Q3 = Y < y1 + (y3 - y1) / (x3 - x1) * (X - x1)  # зона нижче прямої, яка проходить через точки (x1,y1) і (x2,y2)
Q4 = Y > y0 + (y2 - y0) / (x2 - x0) * (X - x0)
Q5 = Y < y3 + (y4 - y3) / (x4 - x3) * (X - x3)
Q6 = Y > y2 + (y4 - y2) / (x4 - x2) * (X - x2)
Q = Q1 & Q2 & Q3 & Q4  # Q дорівнює true лише для внутрішніх точок трикутника
Q1 = Q5 & Q6
B = np.zeros([N + 1, N + 1])  # матриця бажаного розміру, 0 - колір фону (чорний)
B[np.flipud(Q)] = 255  # 255 - колір фігури
B[np.flipud(Q1)] = 0
cc = 128  # 128 – сірий колір рамки (0 < сс < 255)
n = 5  # товщина рамки в пікселях
B[0:n, :] = cc
B[-n:, :] = cc
B[:, :n] = cc
B[:, -n:] = cc
ext = [-1, 1, -1, 1]
plt.imshow(B, cmap='gray', extent=ext)
plt.savefig('Fig_5_3.png')
plt.show()
